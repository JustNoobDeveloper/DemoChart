#pragma checksum "C:\Users\User\source\repos\Chart\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "757230d4cad5ba07781a53844f9be8f947f95e7a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\User\source\repos\Chart\Views\_ViewImports.cshtml"
using Chart;

#line default
#line hidden
#line 2 "C:\Users\User\source\repos\Chart\Views\_ViewImports.cshtml"
using Chart.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"757230d4cad5ba07781a53844f9be8f947f95e7a", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e7fb16f3f5c2c107a9e88de6c61be1cdf616711c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\User\source\repos\Chart\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Styles", async() => {
                BeginContext(63, 196, true);
                WriteLiteral("\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.css\" integrity=\"sha256-aa0xaJgmK/X74WM224KMQeNQC2xYKwlAt08oZqjeF0E=\" crossorigin=\"anonymous\" />\r\n");
                EndContext();
            }
            );
            BeginContext(262, 330, true);
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-md-4"">
        <canvas id=""myChart""></canvas>
    </div>
    <div class=""col-md-4"">
        <canvas id=""BarChart""></canvas>
    </div>
    <div class=""col-md-4"">
        <canvas id=""PieChart""></canvas>
    </div>
</div>
<div>
    <canvas id=""BubbleChart""></canvas>
</div>


");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(609, 6117, true);
                WriteLiteral(@"
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"" integrity=""sha256-xKeoJ50pzbUGkpQxDYHD7o7hxe0LaOGeguUidbq6vis="" crossorigin=""anonymous""></script>
    <script>
        $(function () {

            $.ajax({
                type: ""GET"",
                url: ""/Home/GetLineData"",
                success: function (results) {
                    let labels = [];
                    let data = [];
                    results.forEach(function (result) {
                        labels.push(result.month);
                        data.push(result.count);
                    });
                    console.log(data);
                    var ctx = document.getElementById('myChart').getContext('2d');
                    var chart = new Chart(ctx, {
                        // the type of chart we want to create
                        type: 'line',

                        // the data for our datasets
                        data: {
                        ");
                WriteLiteral(@"    labels: labels,
                            datasets: [{
                                label: 'my first dataset',
                                backgroundcolor: 'rgb(255, 99, 132)',
                                bordercolor: 'rgb(255, 99, 132)',
                                data: data
                            }]
                        },

                        // configuration options go here
                        options: {}
                    });
                    
                },
                error: function () {
                    console.log(""test"");
                }
            });

            //TODO: ajax for bar chart
            $.ajax({
                type: ""GET"",
                url: ""/Home/GetBarData"",
                success: function (results) {
                    let labels = [];
                    let data = [];
                    results.forEach(function (result) {
                        labels.push(result.month);
             ");
                WriteLiteral(@"           data.push(result.count);
                    });
                    console.log(data);
                    var bar = document.getElementById('BarChart').getContext('2d');
                    var chart = new Chart(bar, {
                        // the type of chart we want to create
                        type: 'bar',

                        // the data for our datasets
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'my first dataset',
                                backgroundcolor: 'rgb(255, 99, 132)',
                                bordercolor: 'rgb(255, 99, 132)',
                                data: data
                            }]
                        },

                        // configuration options go here
                        options: {}
                    });
                    

                },
                error: function () {
   ");
                WriteLiteral(@"                 console.log(""test"");
                }
            });
            //TODO: ajax for pie chart
            $.ajax({
                type: ""GET"",
                url: ""/Home/GetPieData"",
                success: function (results) {
                    let labels = [];
                    let data = [];
                    results.forEach(function (result) {
                        labels.push(result.month);
                        data.push(result.count);
                    });
                    console.log(data);
                    var pie = document.getElementById('PieChart').getContext('2d');
                    var chart = new Chart(pie, {
                        // the type of chart we want to create
                        type: 'pie',

                        // the data for our datasets
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'my first dataset'");
                WriteLiteral(@",
                                backgroundcolor: 'rgb(255, 99, 132)',
                                bordercolor: 'rgb(255, 99, 132)',
                                data: data
                            }]
                        },

                        // configuration options go here
                        options: {}
                    });
                    

                },
                error: function () {
                    console.log(""test"");
                }
            });
           $.ajax({
                type: ""GET"",
                url: ""/Home/GetBubbleData"",
                success: function (results) {
                    let labels = [];
                    let data = [];
                    results.forEach(function (result) {
                        labels.push(result.month);
                        data.push(result.count);
                    });
                    console.log(data);
                    var bubble = document.getElementById");
                WriteLiteral(@"('BubbleChart').getContext('2d');
                    var chart = new Chart(bubble, {
                        // the type of chart we want to create
                        type: 'bubble',

                        // the data for our datasets
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'my first dataset',
                                backgroundcolor: 'rgb(255, 99, 132)',
                                bordercolor: 'rgb(255, 99, 132)',
                                data: data
                            }]
                        },

                        // configuration options go here
                        options: {}
                    });
                    

                },
                error: function () {
                    console.log(""test"");
                }
            });

        });
        

    </script>

");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
